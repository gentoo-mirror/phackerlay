diff -up kurento-media-server/server/transport/websocket/websocketpp/transport/asio/security/tls.hpp
--- kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/security/tls.hpp	2016-02-22 07:30:10.000000000 -0600
+++ kurento-bundle-6.13.0/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/security/tls.hpp	2017-05-22 09:49:43.613622484 -0500
@@ -383,13 +383,17 @@
   lib::error_code translate_ec (ErrorCodeType ec)
   {
     if (ec.category() == lib::asio::error::get_ssl_category() ) {
+#ifdef SSL_R_SHORT_READ
       if (ERR_GET_REASON (ec.value() ) == SSL_R_SHORT_READ) {
         return make_error_code (transport::error::tls_short_read);
       } else {
+#endif
         // We know it is a TLS related error, but otherwise don't know
         // more. Pass through as TLS generic.
         return make_error_code (transport::error::tls_error);
+#ifdef SSL_R_SHORT_READ
       }
+#endif
     } else {
       // We don't know any more information about this error so pass
       // through

diff --git kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/connection.hpp kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/connection.hpp
--- kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/connection.hpp
+++ kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/connection.hpp
@@ -339,7 +339,7 @@
   timer_ptr set_timer (long duration, timer_handler callback)
   {
     timer_ptr new_timer = lib::make_shared<lib::asio::steady_timer> (
-                            lib::ref (*m_io_service),
+                            *m_io_service,
                             lib::asio::milliseconds (duration)
                           );
 
@@ -495,7 +495,7 @@
 
     if (config::enable_multithreading) {
       m_strand = lib::make_shared<lib::asio::io_service::strand> (
-                   lib::ref (*io_service) );
+                   *io_service );
     }
 
     lib::error_code ec = socket_con_type::init_asio (io_service, m_strand,

--- kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/endpoint.hpp
+++ kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/endpoint.hpp
@@ -200,7 +200,7 @@
     m_io_service = ptr;
     m_external_io_service = true;
     m_acceptor = lib::make_shared<lib::asio::ip::tcp::acceptor> (
-                   lib::ref (*m_io_service) );
+                   *m_io_service );
 
     m_state = READY;
     ec = lib::error_code();
@@ -717,7 +717,7 @@
   void start_perpetual()
   {
     m_work = lib::make_shared<lib::asio::io_service::work> (
-               lib::ref (*m_io_service)
+               *m_io_service
              );
   }
 
@@ -891,7 +891,7 @@
     // Create a resolver
     if (!m_resolver) {
       m_resolver = lib::make_shared<lib::asio::ip::tcp::resolver> (
-                     lib::ref (*m_io_service) );
+                     *m_io_service );
     }
 
     tcon->set_uri (u);

--- kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/security/none.hpp
+++ kurento-bundle-6.13.0.orig/kurento-media-server/server/transport/websocket/websocketpp/transport/asio/security/none.hpp
@@ -182,7 +182,7 @@
     }
 
     m_socket = lib::make_shared<lib::asio::ip::tcp::socket> (
-                 lib::ref (*service) );
+                 *service );
 
     m_state = READY;

